name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build wheel only
        run: python -m build --wheel

      - name: List dist files (optional)
        run: ls -l dist

      # GitHub Release に wheel を添付
      - name: Create/Update GitHub Release and upload wheel
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.whl
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          fail_on_unmatched_files: true

      # artifacts ブランチへ「タグ付きパス」で公開（latest は作らない）
      - name: Prepare files for artifacts branch
        env:
          TAG: ${{ github.ref_name }}
        run: |
          set -eux
          mkdir -p public/releases/"$TAG"
          cp dist/*.whl public/releases/"$TAG"/

      - name: Publish to artifacts branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: artifacts
          publish_dir: public
          keep_files: true  # 過去の v*/ を保持

      - name: Show jsDelivr URLs
        env:
          REPO: ${{ github.repository }}
          TAG: ${{ github.ref_name }}
        run: |
          for f in dist/*.whl; do
            base=$(basename "$f")
            echo "Versioned URL:"
            echo "https://cdn.jsdelivr.net/gh/${REPO}@artifacts/releases/${TAG}/${base}"
          done
